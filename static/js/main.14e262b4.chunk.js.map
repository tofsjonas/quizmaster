{"version":3,"sources":["contexts/SettingsContext.js","reducers/gameReducer.js","contexts/GameContext.js","lib/sanitizeJSON.js","components/start/StartButton.js","lib/storage.js","components/start/NumberOfQuestionsPicker.js","components/start/CategoryPicker.js","components/Start.js","components/start/CountDown.js","components/game/header/GameTimer.js","components/game/header/GameNumber.js","components/game/GameHeader.js","components/game/AnswerButton.js","lib/shuffleArray.js","components/ResetButton.js","components/game/GameMain.js","components/game/PlusTenButton.js","components/game/FiftyFiftyButton.js","components/game/LifeLines.js","components/Hr.js","components/Game.js","components/Statistics.js","Main.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["SettingsContext","createContext","SettingsContextProvider","children","useState","category","setCategory","numberOfQuestions","setNumberOfQuestions","Provider","value","gameReducer","state","action","type","payload","counter","timer","timer_interval","timeElapsed","plusTen","current","fiftyFifty","correct","incorrect","unanswered","fastestTime","totalTime","questions","map","question","index","stats","GameContext","initialState","GameContextProvider","useReducer","dispatch","resetGame","span","document","createElement","decodeSpecialChars","text","replace","entity","position","innerHTML","sanitizeJSON","res","correct_answer","incorrect_answers","answer","StartButton","useContext","onClick","success","fail","remoteUrl","axios","get","crossdomain","then","response","status","data","results","Array","isArray","Error","catch","err","fetchQuestions","console","log","className","NumberOfQuestionsPicker","for","id","onChange","e","target","CategoryPicker","Start","CountDown","interval","useRef","useEffect","setInterval","clearInterval","GameTimer","toString","padStart","GameNumber","length","GameHeader","AnswerButton","fifties","disabled","indexOf","shuffleArray","array","i","j","Math","floor","random","temp","ResetButton","GameMain","setQuestion","answers","setAnswers","setFifties","params","rand","obj","splice","prepareQuestion","key","PlusTenButton","FiftyFiftyButton","LifeLines","Hr","Game","Statistics","average","setAverage","lifeLines","setLifeLines","avg","round","life_lines","push","join","Main","Header","Footer","href","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14e262b4.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\nexport const SettingsContext = createContext()\n\nconst SettingsContextProvider = ({ children }) => {\n  const [category, setCategory] = useState(11)\n  const [numberOfQuestions, setNumberOfQuestions] = useState(10)\n\n  return <SettingsContext.Provider value={{ numberOfQuestions, setNumberOfQuestions, category, setCategory }}>{children}</SettingsContext.Provider>\n}\n\nexport default SettingsContextProvider\n","export const gameReducer = (state, action) => {\n  switch (action.type) {\n    case 'RESET_GAME':\n      return action.payload\n    case 'START_COUNTDOWN':\n      return { ...state, counter: 3 }\n    case 'TIMER_RESET':\n      return { ...state, timer: state.timer_interval, timeElapsed: 0 }\n    case 'TIMER_TICK':\n      return { ...state, timer: state.timer - 1, timeElapsed: state.timeElapsed + 1 }\n    case 'TIMER_PLUSTEN':\n      return {\n        ...state,\n        timer: state.timer + 10,\n        plusTen: state.current,\n      }\n\n    case 'USE_FIFTYFIFTY':\n      return { ...state, fiftyFifty: state.current }\n    case 'COUNT_DOWN':\n      return { ...state, counter: state.counter - 1 }\n    case 'NEXT_QUESTION':\n      return { ...state, current: state.current + 1 }\n\n    case 'ANSWER_QUESTION':\n      const correct = action.payload.correct ? 1 : 0\n      const incorrect = action.payload.incorrect ? 1 : 0\n      const unanswered = action.payload.unanswered ? 1 : 0\n      return {\n        ...state,\n        correct: state.correct + correct,\n        incorrect: state.incorrect + incorrect,\n        unanswered: state.unanswered + unanswered,\n        fastestTime: state.timeElapsed < state.fastestTime ? state.timeElapsed : state.fastestTime,\n\n        current: state.current + 1,\n        totalTime: state.totalTime + state.timeElapsed,\n        timer: state.timer_interval,\n        timeElapsed: 0,\n        questions: state.questions.map((question, index) => {\n          if (index === state.current) {\n            question.stats = action.payload\n          }\n          return question\n        }),\n      }\n\n    case 'SET_QUESTIONS':\n      return { ...state, questions: action.payload }\n    default:\n      return state\n  }\n}\n","import React, { createContext, useReducer } from 'react'\nimport { gameReducer } from 'reducers/gameReducer'\nexport const GameContext = createContext()\n\n// belongs to SettingsContext...\nconst timer_interval = 15\n\n// vissa av dessa grejer skulle kanska hamna i statsContext?\nconst initialState = {\n  counter: 0,\n  timer: timer_interval,\n  timeElapsed: 0,\n  fastestTime: timer_interval,\n  timer_interval: timer_interval,\n  current: 0,\n  fiftyFifty: -1,\n  plusTen: -1,\n  questions: [],\n  correct: 0,\n  incorrect: 0,\n  unanswered: 0,\n  totalTime: 0,\n}\n\nconst GameContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(gameReducer, initialState)\n  const resetGame = () => {\n    dispatch({ type: 'RESET_GAME', payload: initialState })\n  }\n  return <GameContext.Provider value={{ ...state, dispatch, resetGame }}>{children}</GameContext.Provider>\n}\n\nexport default GameContextProvider\n","//https://stackoverflow.com/questions/5796718/html-entity-decode\nconst span = document.createElement('span')\n\nfunction decodeSpecialChars(text) {\n  return text.replace(/&[#A-Za-z0-9]+;/gi, (entity, position, text) => {\n    span.innerHTML = entity\n    return span.innerHTML\n  })\n}\n\nconst sanitizeJSON = res => {\n  return res.map(question => {\n    question.question = decodeSpecialChars(question.question)\n    question.correct_answer = decodeSpecialChars(question.correct_answer)\n    question.incorrect_answers = question.incorrect_answers.map(answer => {\n      return decodeSpecialChars(answer)\n    })\n    return question\n  })\n}\nexport default sanitizeJSON\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nimport { fetchQuestions } from 'lib/storage'\nimport { SettingsContext } from 'contexts/SettingsContext'\nimport sanitizeJSON from 'lib/sanitizeJSON'\n\nconst StartButton = () => {\n  const { dispatch } = useContext(GameContext)\n  const { category, numberOfQuestions } = useContext(SettingsContext)\n\n  const handleClick = () => {\n    const success = res => {\n      dispatch({ type: 'SET_QUESTIONS', payload: sanitizeJSON(res) })\n    }\n    const fail = err => {\n      // TODO error handling...\n      console.log('SPACETAG: StartButton.js', err)\n    }\n\n    // run in parallell, three seconds should be plenty, unless something goes wrong...\n    fetchQuestions({\n      category,\n      numberOfQuestions,\n      success,\n      fail,\n    })\n\n    dispatch({ type: 'START_COUNTDOWN' })\n  }\n\n  return (\n    <button onClick={handleClick} className=\"StartButton button\">\n      Start Quiz\n    </button>\n  )\n}\nexport default StartButton\n","import axios from 'axios'\n// import sanitizeJSON from './sanitizeJSON'\n\nexport const fetchQuestions = ({ numberOfQuestions, category, success, fail }) => {\n  const remoteUrl = 'https://opentdb.com/api.php?amount=' + numberOfQuestions + '&category=' + category + '&type=multiple'\n  // const res = {\n  //   response_code: 0,\n  //   results: [\n  //     {\n  //       category: 'Entertainment: Books',\n  //       type: 'multiple',\n  //       difficulty: 'medium',\n  //       question: 'Who wrote the &quot;A Song of Ice And Fire&quot; fantasy novel series?',\n  //       correct_answer: 'George R. R. Martin',\n  //       incorrect_answers: ['George Lucas', 'George Orwell', 'George Eliot'],\n  //     },\n  //     {\n  //       category: 'Entertainment: Books',\n  //       type: 'multiple',\n  //       difficulty: 'hard',\n  //       question: 'Which author and poet famously wrote the line, &quot;The female of the species is more deadly than the male&quot;?',\n  //       correct_answer: 'Rudyard Kipling',\n  //       incorrect_answers: ['Edgar Allan Poe', 'William Shakespeare', 'William Wordsworth'],\n  //     },\n  //   ],\n  // }\n\n  // setTimeout(() => {\n  //   success(res.results)\n  // }, 100)\n  axios\n    .get(remoteUrl, { crossdomain: true })\n    .then(response => {\n      if (response.status === 200) {\n        if (response.data.results && Array.isArray(response.data.results)) {\n          success(response.data.results)\n        } else fail(new Error('Incorrect response from server'))\n      } else fail(new Error('Unknown error'))\n    })\n    .catch(err => {\n      fail(err)\n    })\n}\n","import React, { useContext } from \"react\";\nimport { SettingsContext } from \"contexts/SettingsContext\";\n\nconst NumberOfQuestionsPicker = () => {\n  const { numberOfQuestions, setNumberOfQuestions } = useContext(\n    SettingsContext\n  );\n\n  const handleChange = (e) => {\n    setNumberOfQuestions(e.target.value);\n  };\n\n  return (\n    <div className=\"NumberOfQuestionsPicker\">\n      <label for=\"number-of-questions-picker\">Number of Questions:</label>\n      <select\n        id=\"number-of-questions-picker\"\n        value={numberOfQuestions}\n        onChange={handleChange}\n      >\n        <option value=\"5\">5</option>\n        <option value=\"10\">10</option>\n        <option value=\"15\">15</option>\n      </select>\n    </div>\n  );\n};\nexport default NumberOfQuestionsPicker;\n","import React, { useContext } from \"react\";\nimport { SettingsContext } from \"contexts/SettingsContext\";\nconst CategoryPicker = () => {\n  const { category, setCategory } = useContext(SettingsContext);\n  const handleChange = (e) => {\n    setCategory(e.target.value);\n  };\n\n  return (\n    <div className=\"CategoryPicker\">\n      <label for=\"category-picker\">Category:</label>\n      <select id=\"category-picker\" onChange={handleChange} value={category}>\n        <option value=\"10\">Books</option>\n        <option value=\"11\">Movies</option>\n      </select>\n    </div>\n  );\n};\nexport default CategoryPicker;\n","import React from 'react'\nimport StartButton from 'components/start/StartButton'\nimport NumberOfQuestionsPicker from 'components/start/NumberOfQuestionsPicker'\nimport CategoryPicker from 'components/start/CategoryPicker'\nconst Start = () => {\n  return (\n    <div className=\"Start\">\n      <div className=\"intro\">Welcome to QuizMaster, the most amazing quiz game ever</div>\n      <CategoryPicker />\n      <NumberOfQuestionsPicker />\n      <StartButton />\n    </div>\n  )\n}\nexport default Start\n","import React, { useContext, useEffect, useRef } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nconst CountDown = () => {\n  const { counter, dispatch } = useContext(GameContext)\n  var interval = useRef()\n\n  useEffect(() => {\n    interval.current = setInterval(function() {\n      dispatch({ type: 'COUNT_DOWN' })\n    }, 300)\n    return () => {\n      clearInterval(interval.current)\n    }\n  }, [dispatch])\n\n  return (\n    <div className=\"CountDown\">\n      {counter === 3 && <div>Ready...</div>}\n      {counter === 2 && <div>Set...</div>}\n      {counter === 1 && <div>Go!</div>}\n      <div className=\"counter\">{counter}</div>\n    </div>\n  )\n}\nexport default CountDown\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nconst GameTimer = () => {\n  const { timer } = useContext(GameContext)\n\n  return (\n    <div className=\"GameTimer\">\n      <label>Time left: </label>\n      <span className={'clock' + (timer <= 5 ? ' blink' : '')}>&nbsp;00:{timer.toString().padStart(2, '0')} </span>\n    </div>\n  )\n}\nexport default GameTimer\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nconst GameNumber = () => {\n  const { current, questions } = useContext(GameContext)\n\n  return (\n    <div className=\"GameNumber\">\n      <label>Question:</label>\n      <span>\n        {current + 1}/{questions.length}\n      </span>\n    </div>\n  )\n}\nexport default GameNumber\n","import React from 'react'\nimport GameTimer from './header/GameTimer'\nimport GameNumber from './header/GameNumber'\nconst GameHeader = () => {\n  return (\n    <div className=\"GameHeader\">\n      <GameNumber />\n      <GameTimer />\n    </div>\n  )\n}\nexport default GameHeader\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nconst AnswerButton = ({ text, fifties }) => {\n  const { questions, current, fiftyFifty, dispatch } = useContext(GameContext)\n\n  const handleClick = () => {\n    const correct = text === questions[current].correct_answer\n    const incorrect = !correct\n    const stats = {\n      correct,\n      incorrect,\n    }\n\n    dispatch({ type: 'ANSWER_QUESTION', payload: stats })\n\n    // if (correct) {\n    //   dispatch({ type: 'CORRECT_ANSWER', payload: stats })\n    // } else {\n    //   dispatch({ type: 'INCORRECT_ANSWER', payload: stats })\n    // }\n  }\n  return (\n    <button disabled={fiftyFifty === current && fifties.indexOf(text) !== -1} onClick={handleClick} className=\"AnswerButton\">\n      {text}\n    </button>\n  )\n}\nexport default AnswerButton\n","/**\n * Randomize array element order in-place.\n * Using Durstenfeld shuffle algorithm.\n */\nconst shuffleArray = array => {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1))\n    var temp = array[i]\n    array[i] = array[j]\n    array[j] = temp\n  }\n}\nexport default shuffleArray\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nconst ResetButton = ({ text }) => {\n  const { resetGame } = useContext(GameContext)\n\n  // confirmation is a bad idea\n  // const handleClick = () => {\n  //   if(window.confirm('Are you sure')){\n  //     resetGame()\n  //   }\n  // }\n\n  return (\n    <button onClick={resetGame} className=\"ResetButton button\">\n      {text}\n    </button>\n  )\n}\nexport default ResetButton\n","import React, { useContext, useState, useEffect, useRef } from 'react'\nimport AnswerButton from './AnswerButton'\nimport { GameContext } from 'contexts/GameContext'\nimport shuffleArray from 'lib/shuffleArray'\nimport ResetButton from 'components/ResetButton'\nconst GameMain = () => {\n  const { questions, current, timer, dispatch, plusTen, timer_interval } = useContext(GameContext)\n  const [question, setQuestion] = useState('')\n  const [answers, setAnswers] = useState([])\n  const [fifties, setFifties] = useState([])\n  var interval = useRef()\n\n  useEffect(() => {\n    interval.current = setInterval(function() {\n      dispatch({ type: 'TIMER_TICK' })\n    }, 1000)\n\n    return () => {\n      clearInterval(interval.current)\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    const prepareQuestion = params => {\n      const rand = Math.floor(Math.random() * 3)\n      const obj = questions[current]\n      const answers = [...obj.incorrect_answers, obj.correct_answer]\n      shuffleArray(answers)\n      const fifties = [...obj.incorrect_answers]\n      fifties.splice(rand, 1)\n      setFifties(fifties)\n      setQuestion(obj.question)\n      setAnswers(answers)\n    }\n\n    if (current !== questions.length) {\n      prepareQuestion()\n    }\n  }, [current, questions, dispatch])\n\n  useEffect(() => {\n    if (timer === 0) {\n      const timeElapsed = timer_interval - timer\n\n      const stats = {\n        unanswered: true,\n        timeElapsed,\n      }\n      dispatch({ type: 'ANSWER_QUESTION', payload: stats })\n\n      // dispatch({ type: 'UNANSWERED_QUESTION', payload: stats })\n    }\n  }, [timer, dispatch, current, plusTen, timer_interval])\n\n  return (\n    <div className=\"GameMain\">\n      <ResetButton text=\"Quit\" />\n      <div className=\"Question\">{question}</div>\n      <div className=\"Answers\">\n        {answers.map((answer, index) => {\n          return <AnswerButton key={'a' + index} text={answer} fifties={fifties} />\n        })}\n      </div>\n    </div>\n  )\n}\nexport default GameMain\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nconst PlusTenButton = () => {\n  const { plusTen, dispatch } = useContext(GameContext)\n  const handleClick = () => {\n    dispatch({ type: 'TIMER_PLUSTEN' })\n  }\n\n  return (\n    <button disabled={plusTen === -1 ? false : true} className=\"PlusTenButton\" onClick={handleClick}>\n      +10s\n    </button>\n  )\n}\nexport default PlusTenButton\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nconst FiftyFiftyButton = () => {\n  const { fiftyFifty, dispatch } = useContext(GameContext)\n  const handleClick = () => {\n    dispatch({ type: 'USE_FIFTYFIFTY' })\n  }\n  return (\n    <button disabled={fiftyFifty === -1 ? false : true} className=\"FiftyFiftyButton\" onClick={handleClick}>\n      50/50\n    </button>\n  )\n}\nexport default FiftyFiftyButton\n","import React from 'react'\nimport PlusTenButton from './PlusTenButton'\nimport FiftyFiftyButton from './FiftyFiftyButton'\nconst LifeLines = () => {\n  return (\n    <div className=\"LifeLines\">\n      <PlusTenButton />\n      <div className=\"lifeline-title raised\">Lifelines</div>\n      <FiftyFiftyButton />\n    </div>\n  )\n}\nexport default LifeLines\n","import React from 'react'\nconst Hr = () => {\n  return <div className=\"Hr\"></div>\n}\nexport default Hr\n","import React from 'react'\nimport GameHeader from 'components/game/GameHeader'\nimport GameMain from 'components/game/GameMain'\nimport LifeLines from 'components/game/LifeLines'\nimport Hr from 'components/Hr'\nconst Game = () => {\n  return (\n    <div className=\"Game\">\n      <GameHeader />\n      <Hr />\n      <GameMain />\n      <Hr />\n      <LifeLines />\n    </div>\n  )\n}\nexport default Game\n","import React, { useContext, useState, useEffect } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nimport ResetButton from './ResetButton'\nconst Statistics = () => {\n  const { questions, fiftyFifty, plusTen, correct, incorrect, totalTime, unanswered, fastestTime } = useContext(GameContext)\n  const [average, setAverage] = useState(0)\n  const [lifeLines, setLifeLines] = useState([])\n\n  useEffect(() => {\n    const avg = (totalTime / questions.length) * 10\n    setAverage(Math.round(avg) / 10)\n\n    const life_lines = []\n    if (fiftyFifty !== -1) {\n      life_lines.push('50/50')\n    }\n    if (plusTen !== -1) {\n      life_lines.push('+10s')\n    }\n    setLifeLines(life_lines)\n  }, [fiftyFifty, plusTen, questions, totalTime])\n\n  return (\n    <div className=\"Statistics\">\n      <h2>Statistics</h2>\n      <div>\n        <label>Correct answers:</label>\n        <span>{correct}</span>\n      </div>\n      <div>\n        <label>Incorrect answers:</label>\n        <span>{incorrect}</span>\n      </div>\n      <div>\n        <label>Unanswered questions:</label>\n        <span>{unanswered}</span>\n      </div>\n      <div>\n        <label>Average time:</label>\n        <span>{average} s</span>\n      </div>\n      <div>\n        <label>Fastest time:</label>\n        <span>{fastestTime} s</span>\n      </div>\n      <div>\n        <label>LifeLines used:</label>\n        <span>{lifeLines.length ? lifeLines.join(' and ') : 'None!'}</span>\n      </div>\n\n      <ResetButton text=\"Restart QuizMaster\" />\n    </div>\n  )\n}\nexport default Statistics\n","import React, { useContext } from 'react'\nimport Start from 'components/Start'\nimport CountDown from 'components/start/CountDown'\nimport Game from 'components/Game'\nimport Statistics from 'components/Statistics'\nimport { GameContext } from 'contexts/GameContext'\nconst Main = () => {\n  const { counter, questions, current } = useContext(GameContext)\n\n  return (\n    <main>\n      {counter > 0 && <CountDown />}\n      {counter === 0 && questions.length === 0 && <Start />}\n      {counter === 0 && questions.length > 0 && questions.length > current && <Game />}\n      {counter === 0 && questions.length > 0 && questions.length === current && <Statistics />}\n    </main>\n  )\n}\nexport default Main\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nimport Hr from 'components/Hr'\nconst Header = () => {\n  const { counter, questions } = useContext(GameContext)\n\n  return (\n    counter === 0 &&\n    questions.length === 0 && (\n      <header>\n        <h1 className=\"raised\">\n          Quiz\n          <wbr />\n          Master\n        </h1>\n        <Hr />\n      </header>\n    )\n  )\n}\nexport default Header\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nimport Hr from 'components/Hr'\nconst Footer = () => {\n  const { counter, questions } = useContext(GameContext)\n\n  return (\n    counter === 0 &&\n    questions.length === 0 && (\n      <>\n        <Hr />\n        <footer>\n          <div>\n            Powered by <a href=\"https://reactjs.org/\">React</a>\n          </div>\n          <div>\n            Questions from <a href=\"https://opentdb.com/\">Open Trivia Database</a>\n          </div>\n          <div>\n            Coded by <a href=\"https://www.linkedin.com/in/jonas-earendel/\">Jonas Earendel</a>\n          </div>\n        </footer>\n      </>\n    )\n  )\n}\nexport default Footer\n","import React from 'react'\nimport SettingsContextProvider from './contexts/SettingsContext'\nimport GameContextProvider from 'contexts/GameContext'\nimport Main from 'Main'\nimport Header from './components/Header'\nimport Footer from 'components/Footer'\n\nfunction App() {\n  return (\n    <SettingsContextProvider>\n      <GameContextProvider>\n        <div className=\"App\">\n          <Header />\n          <Main />\n          <Footer />\n        </div>\n      </GameContextProvider>\n    </SettingsContextProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}