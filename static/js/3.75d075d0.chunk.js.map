{"version":3,"sources":["components/ResetButton.js","components/game/header/GameTimer.js","components/game/header/GameNumber.js","components/game/GameHeader.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/game/AnswerButton.js","lib/shuffleArray.js","components/game/GameMain.js","components/game/PlusTenButton.js","components/game/FiftyFiftyButton.js","components/game/LifeLines.js","components/Game.js"],"names":["ResetButton","text","resetGame","useContext","GameContext","onClick","className","GameTimer","timer","toString","padStart","GameNumber","current","questions","length","GameHeader","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","AnswerButton","fifties","fiftyFifty","dispatch","disabled","indexOf","correct","correct_answer","type","payload","incorrect","shuffleArray","array","i","j","Math","floor","random","temp","GameMain","plusTen","timer_interval","useState","question","setQuestion","answers","setAnswers","setFifties","interval","useRef","useEffect","setInterval","clearInterval","params","rand","obj","incorrect_answers","splice","prepareQuestion","unanswered","timeElapsed","map","answer","index","key","PlusTenButton","FiftyFiftyButton","LifeLines","Game","Hr"],"mappings":"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","file":"static/js/3.75d075d0.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nconst ResetButton = ({ text }) => {\n  const { resetGame } = useContext(GameContext)\n\n  // confirmation is a bad idea\n  // const handleClick = () => {\n  //   if(window.confirm('Are you sure')){\n  //     resetGame()\n  //   }\n  // }\n\n  return (\n    <button onClick={resetGame} className=\"ResetButton button\">\n      {text}\n    </button>\n  )\n}\nexport default ResetButton\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nconst GameTimer = () => {\n  const { timer } = useContext(GameContext)\n\n  return (\n    <div className=\"GameTimer\">\n      <label>Time left: </label>\n      <span className={'clock' + (timer <= 5 ? ' blink' : '')}>&nbsp;00:{timer.toString().padStart(2, '0')} </span>\n    </div>\n  )\n}\nexport default GameTimer\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nconst GameNumber = () => {\n  const { current, questions } = useContext(GameContext)\n\n  return (\n    <div className=\"GameNumber\">\n      <label>Question:</label>\n      <span>\n        {current + 1}/{questions.length}\n      </span>\n    </div>\n  )\n}\nexport default GameNumber\n","import React from 'react'\nimport GameTimer from './header/GameTimer'\nimport GameNumber from './header/GameNumber'\nconst GameHeader = () => {\n  return (\n    <div className=\"GameHeader\">\n      <GameNumber />\n      <GameTimer />\n    </div>\n  )\n}\nexport default GameHeader\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nconst AnswerButton = ({ text, fifties }) => {\n  const { questions, current, fiftyFifty, dispatch } = useContext(GameContext)\n\n  const handleClick = () => {\n    const correct = text === questions[current].correct_answer\n    const incorrect = !correct\n    const stats = {\n      correct,\n      incorrect,\n    }\n\n    dispatch({ type: 'ANSWER_QUESTION', payload: stats })\n\n    // if (correct) {\n    //   dispatch({ type: 'CORRECT_ANSWER', payload: stats })\n    // } else {\n    //   dispatch({ type: 'INCORRECT_ANSWER', payload: stats })\n    // }\n  }\n  return (\n    <button disabled={fiftyFifty === current && fifties.indexOf(text) !== -1} onClick={handleClick} className=\"AnswerButton\">\n      {text}\n    </button>\n  )\n}\nexport default AnswerButton\n","/**\n * Randomize array element order in-place.\n * Using Durstenfeld shuffle algorithm.\n */\nconst shuffleArray = array => {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1))\n    var temp = array[i]\n    array[i] = array[j]\n    array[j] = temp\n  }\n}\nexport default shuffleArray\n","import React, { useContext, useState, useEffect, useRef } from 'react'\nimport AnswerButton from './AnswerButton'\nimport { GameContext } from 'contexts/GameContext'\nimport shuffleArray from 'lib/shuffleArray'\nimport ResetButton from 'components/ResetButton'\nconst GameMain = () => {\n  const { questions, current, timer, dispatch, plusTen, timer_interval } = useContext(GameContext)\n  const [question, setQuestion] = useState('')\n  const [answers, setAnswers] = useState([])\n  const [fifties, setFifties] = useState([])\n  var interval = useRef()\n\n  useEffect(() => {\n    interval.current = setInterval(function() {\n      dispatch({ type: 'TIMER_TICK' })\n    }, 1000)\n\n    return () => {\n      clearInterval(interval.current)\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    const prepareQuestion = params => {\n      const rand = Math.floor(Math.random() * 3)\n      const obj = questions[current]\n      const answers = [...obj.incorrect_answers, obj.correct_answer]\n      shuffleArray(answers)\n      const fifties = [...obj.incorrect_answers]\n      fifties.splice(rand, 1)\n      setFifties(fifties)\n      setQuestion(obj.question)\n      setAnswers(answers)\n    }\n\n    if (current !== questions.length) {\n      prepareQuestion()\n    }\n  }, [current, questions, dispatch])\n\n  useEffect(() => {\n    if (timer === 0) {\n      const timeElapsed = timer_interval - timer\n\n      const stats = {\n        unanswered: true,\n        timeElapsed,\n      }\n      dispatch({ type: 'ANSWER_QUESTION', payload: stats })\n\n      // dispatch({ type: 'UNANSWERED_QUESTION', payload: stats })\n    }\n  }, [timer, dispatch, current, plusTen, timer_interval])\n\n  return (\n    <div className=\"GameMain\">\n      <ResetButton text=\"Quit\" />\n      <div className=\"Question\">{question}</div>\n      <div className=\"Answers\">\n        {answers.map((answer, index) => {\n          return <AnswerButton key={'a' + index} text={answer} fifties={fifties} />\n        })}\n      </div>\n    </div>\n  )\n}\nexport default GameMain\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nconst PlusTenButton = () => {\n  const { plusTen, dispatch } = useContext(GameContext)\n  const handleClick = () => {\n    dispatch({ type: 'TIMER_PLUSTEN' })\n  }\n\n  return (\n    <button disabled={plusTen === -1 ? false : true} className=\"PlusTenButton\" onClick={handleClick}>\n      +10s\n    </button>\n  )\n}\nexport default PlusTenButton\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nconst FiftyFiftyButton = () => {\n  const { fiftyFifty, dispatch } = useContext(GameContext)\n  const handleClick = () => {\n    dispatch({ type: 'USE_FIFTYFIFTY' })\n  }\n  return (\n    <button disabled={fiftyFifty === -1 ? false : true} className=\"FiftyFiftyButton\" onClick={handleClick}>\n      50/50\n    </button>\n  )\n}\nexport default FiftyFiftyButton\n","import React from 'react'\nimport PlusTenButton from './PlusTenButton'\nimport FiftyFiftyButton from './FiftyFiftyButton'\nconst LifeLines = () => {\n  return (\n    <div className=\"LifeLines\">\n      <PlusTenButton />\n      <div className=\"lifeline-title raised\">Lifelines</div>\n      <FiftyFiftyButton />\n    </div>\n  )\n}\nexport default LifeLines\n","import React from 'react'\nimport GameHeader from 'components/game/GameHeader'\nimport GameMain from 'components/game/GameMain'\nimport LifeLines from 'components/game/LifeLines'\nimport Hr from 'components/Hr'\nconst Game = () => {\n  return (\n    <div className=\"Game\">\n      <GameHeader />\n      <Hr />\n      <GameMain />\n      <Hr />\n      <LifeLines />\n    </div>\n  )\n}\nexport default Game\n"],"sourceRoot":""}