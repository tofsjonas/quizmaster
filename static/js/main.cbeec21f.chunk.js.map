{"version":3,"sources":["reducers/gameReducer.js","contexts/GameContext.js","contexts/SettingsContext.js","lib/sanitizeJSON.js","components/start/StartButton.js","lib/storage.js","components/start/NumberOfQuestionsPicker.js","components/start/CategoryPicker.js","components/Start.js","Main.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js","components/Hr.js"],"names":["gameReducer","state","action","type","payload","counter","timer","timer_interval","timeElapsed","plusTen","current","fiftyFifty","correct","incorrect","unanswered","fastestTime","totalTime","questions","map","question","index","stats","GameContext","createContext","initialState","GameContextProvider","children","useReducer","dispatch","Provider","value","resetGame","SettingsContext","SettingsContextProvider","useState","category","setCategory","numberOfQuestions","setNumberOfQuestions","span","document","createElement","decodeSpecialChars","text","replace","entity","position","innerHTML","sanitizeJSON","res","correct_answer","incorrect_answers","answer","StartButton","useContext","onClick","success","fail","remoteUrl","axios","get","crossdomain","then","response","status","data","results","Array","isArray","Error","catch","err","fetchQuestions","console","log","className","NumberOfQuestionsPicker","for","id","onChange","e","target","CategoryPicker","Start","Game","lazy","CountDown","Statistics","Main","length","Header","Hr","Footer","href","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbeec21f.chunk.js","sourcesContent":["export const gameReducer = (state, action) => {\n  switch (action.type) {\n    case 'RESET_GAME':\n      return action.payload\n    case 'START_COUNTDOWN':\n      return { ...state, counter: 3 }\n    case 'TIMER_RESET':\n      return { ...state, timer: state.timer_interval, timeElapsed: 0 }\n    case 'TIMER_TICK':\n      return { ...state, timer: state.timer - 1, timeElapsed: state.timeElapsed + 1 }\n    case 'TIMER_PLUSTEN':\n      return {\n        ...state,\n        timer: state.timer + 10,\n        plusTen: state.current,\n      }\n\n    case 'USE_FIFTYFIFTY':\n      return { ...state, fiftyFifty: state.current }\n    case 'COUNT_DOWN':\n      return { ...state, counter: state.counter - 1 }\n    case 'NEXT_QUESTION':\n      return { ...state, current: state.current + 1 }\n\n    case 'ANSWER_QUESTION':\n      const correct = action.payload.correct ? 1 : 0\n      const incorrect = action.payload.incorrect ? 1 : 0\n      const unanswered = action.payload.unanswered ? 1 : 0\n      return {\n        ...state,\n        correct: state.correct + correct,\n        incorrect: state.incorrect + incorrect,\n        unanswered: state.unanswered + unanswered,\n        fastestTime: state.timeElapsed < state.fastestTime ? state.timeElapsed : state.fastestTime,\n\n        current: state.current + 1,\n        totalTime: state.totalTime + state.timeElapsed,\n        timer: state.timer_interval,\n        timeElapsed: 0,\n        questions: state.questions.map((question, index) => {\n          if (index === state.current) {\n            question.stats = action.payload\n          }\n          return question\n        }),\n      }\n\n    case 'SET_QUESTIONS':\n      return { ...state, questions: action.payload }\n    default:\n      return state\n  }\n}\n","import React, { createContext, useReducer } from 'react'\nimport { gameReducer } from 'reducers/gameReducer'\nexport const GameContext = createContext()\n\n// belongs to SettingsContext...\nconst timer_interval = 15\n\n// vissa av dessa grejer skulle kanska hamna i statsContext?\nconst initialState = {\n  counter: 0,\n  timer: timer_interval,\n  timeElapsed: 0,\n  fastestTime: timer_interval,\n  timer_interval: timer_interval,\n  current: 0,\n  fiftyFifty: -1,\n  plusTen: -1,\n  questions: [],\n  correct: 0,\n  incorrect: 0,\n  unanswered: 0,\n  totalTime: 0,\n}\n\nconst GameContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(gameReducer, initialState)\n  const resetGame = () => {\n    dispatch({ type: 'RESET_GAME', payload: initialState })\n  }\n  return <GameContext.Provider value={{ ...state, dispatch, resetGame }}>{children}</GameContext.Provider>\n}\n\nexport default GameContextProvider\n","import React, { createContext, useState } from 'react'\nexport const SettingsContext = createContext()\n\nconst SettingsContextProvider = ({ children }) => {\n  const [category, setCategory] = useState(11)\n  const [numberOfQuestions, setNumberOfQuestions] = useState(10)\n\n  return <SettingsContext.Provider value={{ numberOfQuestions, setNumberOfQuestions, category, setCategory }}>{children}</SettingsContext.Provider>\n}\n\nexport default SettingsContextProvider\n","//https://stackoverflow.com/questions/5796718/html-entity-decode\nconst span = document.createElement('span')\n\nfunction decodeSpecialChars(text) {\n  return text.replace(/&[#A-Za-z0-9]+;/gi, (entity, position, text) => {\n    span.innerHTML = entity\n    return span.innerHTML\n  })\n}\n\nconst sanitizeJSON = res => {\n  return res.map(question => {\n    question.question = decodeSpecialChars(question.question)\n    question.correct_answer = decodeSpecialChars(question.correct_answer)\n    question.incorrect_answers = question.incorrect_answers.map(answer => {\n      return decodeSpecialChars(answer)\n    })\n    return question\n  })\n}\nexport default sanitizeJSON\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nimport { fetchQuestions } from 'lib/storage'\nimport { SettingsContext } from 'contexts/SettingsContext'\nimport sanitizeJSON from 'lib/sanitizeJSON'\n\nconst StartButton = () => {\n  const { dispatch } = useContext(GameContext)\n  const { category, numberOfQuestions } = useContext(SettingsContext)\n\n  const handleClick = () => {\n    const success = res => {\n      dispatch({ type: 'SET_QUESTIONS', payload: sanitizeJSON(res) })\n    }\n    const fail = err => {\n      // TODO error handling...\n      console.log('SPACETAG: StartButton.js', err)\n    }\n\n    // run in parallell, three seconds should be plenty, unless something goes wrong...\n    fetchQuestions({\n      category,\n      numberOfQuestions,\n      success,\n      fail,\n    })\n\n    dispatch({ type: 'START_COUNTDOWN' })\n  }\n\n  return (\n    <button onClick={handleClick} className=\"StartButton button\">\n      Start Quiz\n    </button>\n  )\n}\nexport default StartButton\n","import axios from 'axios'\n// import sanitizeJSON from './sanitizeJSON'\n\nexport const fetchQuestions = ({ numberOfQuestions, category, success, fail }) => {\n  const remoteUrl = 'https://opentdb.com/api.php?amount=' + numberOfQuestions + '&category=' + category + '&type=multiple'\n  // const res = {\n  //   response_code: 0,\n  //   results: [\n  //     {\n  //       category: 'Entertainment: Books',\n  //       type: 'multiple',\n  //       difficulty: 'medium',\n  //       question: 'Who wrote the &quot;A Song of Ice And Fire&quot; fantasy novel series?',\n  //       correct_answer: 'George R. R. Martin',\n  //       incorrect_answers: ['George Lucas', 'George Orwell', 'George Eliot'],\n  //     },\n  //     {\n  //       category: 'Entertainment: Books',\n  //       type: 'multiple',\n  //       difficulty: 'hard',\n  //       question: 'Which author and poet famously wrote the line, &quot;The female of the species is more deadly than the male&quot;?',\n  //       correct_answer: 'Rudyard Kipling',\n  //       incorrect_answers: ['Edgar Allan Poe', 'William Shakespeare', 'William Wordsworth'],\n  //     },\n  //   ],\n  // }\n\n  // setTimeout(() => {\n  //   success(res.results)\n  // }, 100)\n  axios\n    .get(remoteUrl, { crossdomain: true })\n    .then(response => {\n      if (response.status === 200) {\n        if (response.data.results && Array.isArray(response.data.results)) {\n          success(response.data.results)\n        } else fail(new Error('Incorrect response from server'))\n      } else fail(new Error('Unknown error'))\n    })\n    .catch(err => {\n      fail(err)\n    })\n}\n","import React, { useContext } from \"react\";\nimport { SettingsContext } from \"contexts/SettingsContext\";\n\nconst NumberOfQuestionsPicker = () => {\n  const { numberOfQuestions, setNumberOfQuestions } = useContext(\n    SettingsContext\n  );\n\n  const handleChange = (e) => {\n    setNumberOfQuestions(e.target.value);\n  };\n\n  return (\n    <div className=\"NumberOfQuestionsPicker\">\n      <label for=\"number-of-questions-picker\">Number of Questions:</label>\n      <select\n        id=\"number-of-questions-picker\"\n        value={numberOfQuestions}\n        onChange={handleChange}\n      >\n        <option value=\"5\">5</option>\n        <option value=\"10\">10</option>\n        <option value=\"15\">15</option>\n      </select>\n    </div>\n  );\n};\nexport default NumberOfQuestionsPicker;\n","import React, { useContext } from \"react\";\nimport { SettingsContext } from \"contexts/SettingsContext\";\nconst CategoryPicker = () => {\n  const { category, setCategory } = useContext(SettingsContext);\n  const handleChange = (e) => {\n    setCategory(e.target.value);\n  };\n\n  return (\n    <div className=\"CategoryPicker\">\n      <label for=\"category-picker\">Category:</label>\n      <select id=\"category-picker\" onChange={handleChange} value={category}>\n        <option value=\"10\">Books</option>\n        <option value=\"11\">Movies</option>\n      </select>\n    </div>\n  );\n};\nexport default CategoryPicker;\n","import React from 'react'\nimport StartButton from 'components/start/StartButton'\nimport NumberOfQuestionsPicker from 'components/start/NumberOfQuestionsPicker'\nimport CategoryPicker from 'components/start/CategoryPicker'\nconst Start = () => {\n  return (\n    <div className=\"Start\">\n      <div className=\"intro\">Welcome to QuizMaster, the most amazing quiz game ever</div>\n      <CategoryPicker />\n      <NumberOfQuestionsPicker />\n      <StartButton />\n    </div>\n  )\n}\nexport default Start\n","import React, { useContext, lazy } from \"react\";\nimport Start from \"components/Start\";\nimport { GameContext } from \"contexts/GameContext\";\nconst Game = lazy(() => import(\"components/Game\"));\nconst CountDown = lazy(() => import(\"components/start/CountDown\"));\nconst Statistics = lazy(() => import(\"components/Statistics\"));\n\nconst Main = () => {\n  const { counter, questions, current } = useContext(GameContext);\n\n  return (\n    <main>\n      {counter > 0 && <CountDown />}\n      {counter === 0 && questions.length === 0 && <Start />}\n      {counter === 0 && questions.length > 0 && questions.length > current && (\n        <Game />\n      )}\n      {counter === 0 &&\n        questions.length > 0 &&\n        questions.length === current && <Statistics />}\n    </main>\n  );\n};\nexport default Main;\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nimport Hr from 'components/Hr'\nconst Header = () => {\n  const { counter, questions } = useContext(GameContext)\n\n  return (\n    counter === 0 &&\n    questions.length === 0 && (\n      <header>\n        <h1 className=\"raised\">\n          Quiz\n          <wbr />\n          Master\n        </h1>\n        <Hr />\n      </header>\n    )\n  )\n}\nexport default Header\n","import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nimport Hr from 'components/Hr'\nconst Footer = () => {\n  const { counter, questions } = useContext(GameContext)\n\n  return (\n    counter === 0 &&\n    questions.length === 0 && (\n      <>\n        <Hr />\n        <footer>\n          <div>\n            Powered by <a href=\"https://reactjs.org/\">React</a>\n          </div>\n          <div>\n            Questions from <a href=\"https://opentdb.com/\">Open Trivia Database</a>\n          </div>\n          <div>\n            Coded by <a href=\"https://www.linkedin.com/in/jonas-earendel/\">Jonas Earendel</a>\n          </div>\n        </footer>\n      </>\n    )\n  )\n}\nexport default Footer\n","import React from 'react'\nimport SettingsContextProvider from './contexts/SettingsContext'\nimport GameContextProvider from 'contexts/GameContext'\nimport Main from 'Main'\nimport Header from './components/Header'\nimport Footer from 'components/Footer'\n\nfunction App() {\n  return (\n    <SettingsContextProvider>\n      <GameContextProvider>\n        <div className=\"App\">\n          <Header />\n          <Main />\n          <Footer />\n        </div>\n      </GameContextProvider>\n    </SettingsContextProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\nconst Hr = () => {\n  return <div className=\"Hr\"></div>\n}\nexport default Hr\n"],"sourceRoot":""}