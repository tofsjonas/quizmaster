{"version":3,"sources":["components/ResetButton.js","components/Statistics.js"],"names":["ResetButton","text","resetGame","useContext","GameContext","onClick","className","Statistics","questions","fiftyFifty","plusTen","correct","incorrect","totalTime","unanswered","fastestTime","useState","average","setAverage","lifeLines","setLifeLines","useEffect","avg","length","Math","round","life_lines","push","join"],"mappings":"6FAAA,2BAkBeA,IAhBK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAAcC,qBAAWC,KAAzBF,UASR,OACE,4BAAQG,QAASH,EAAWI,UAAU,sBACnCL,K,iFCwCQM,UAnDI,WAAO,IAAD,EAC4EJ,qBAAWC,KAAtGI,EADe,EACfA,UAAWC,EADI,EACJA,WAAYC,EADR,EACQA,QAASC,EADjB,EACiBA,QAASC,EAD1B,EAC0BA,UAAWC,EADrC,EACqCA,UAAWC,EADhD,EACgDA,WAAYC,EAD5D,EAC4DA,YAD5D,EAEOC,mBAAS,GAFhB,mBAEhBC,EAFgB,KAEPC,EAFO,OAGWF,mBAAS,IAHpB,mBAGhBG,EAHgB,KAGLC,EAHK,KAmBvB,OAdAC,qBAAU,WACR,IAAMC,EAAOT,EAAYL,EAAUe,OAAU,GAC7CL,EAAWM,KAAKC,MAAMH,GAAO,IAE7B,IAAMI,EAAa,IACC,IAAhBjB,GACFiB,EAAWC,KAAK,UAED,IAAbjB,GACFgB,EAAWC,KAAK,QAElBP,EAAaM,KACZ,CAACjB,EAAYC,EAASF,EAAWK,IAGlC,yBAAKP,UAAU,cACb,0CACA,6BACE,mDACA,8BAAOK,IAET,6BACE,qDACA,8BAAOC,IAET,6BACE,wDACA,8BAAOE,IAET,6BACE,gDACA,8BAAOG,EAAP,OAEF,6BACE,gDACA,8BAAOF,EAAP,OAEF,6BACE,kDACA,8BAAOI,EAAUI,OAASJ,EAAUS,KAAK,SAAW,UAGtD,kBAAC,IAAD,CAAa3B,KAAK","file":"static/js/4.79ee7721.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nconst ResetButton = ({ text }) => {\n  const { resetGame } = useContext(GameContext)\n\n  // confirmation is a bad idea\n  // const handleClick = () => {\n  //   if(window.confirm('Are you sure')){\n  //     resetGame()\n  //   }\n  // }\n\n  return (\n    <button onClick={resetGame} className=\"ResetButton button\">\n      {text}\n    </button>\n  )\n}\nexport default ResetButton\n","import React, { useContext, useState, useEffect } from 'react'\nimport { GameContext } from 'contexts/GameContext'\nimport ResetButton from './ResetButton'\nconst Statistics = () => {\n  const { questions, fiftyFifty, plusTen, correct, incorrect, totalTime, unanswered, fastestTime } = useContext(GameContext)\n  const [average, setAverage] = useState(0)\n  const [lifeLines, setLifeLines] = useState([])\n\n  useEffect(() => {\n    const avg = (totalTime / questions.length) * 10\n    setAverage(Math.round(avg) / 10)\n\n    const life_lines = []\n    if (fiftyFifty !== -1) {\n      life_lines.push('50/50')\n    }\n    if (plusTen !== -1) {\n      life_lines.push('+10s')\n    }\n    setLifeLines(life_lines)\n  }, [fiftyFifty, plusTen, questions, totalTime])\n\n  return (\n    <div className=\"Statistics\">\n      <h2>Statistics</h2>\n      <div>\n        <label>Correct answers:</label>\n        <span>{correct}</span>\n      </div>\n      <div>\n        <label>Incorrect answers:</label>\n        <span>{incorrect}</span>\n      </div>\n      <div>\n        <label>Unanswered questions:</label>\n        <span>{unanswered}</span>\n      </div>\n      <div>\n        <label>Average time:</label>\n        <span>{average} s</span>\n      </div>\n      <div>\n        <label>Fastest time:</label>\n        <span>{fastestTime} s</span>\n      </div>\n      <div>\n        <label>LifeLines used:</label>\n        <span>{lifeLines.length ? lifeLines.join(' and ') : 'None!'}</span>\n      </div>\n\n      <ResetButton text=\"Restart QuizMaster\" />\n    </div>\n  )\n}\nexport default Statistics\n"],"sourceRoot":""}